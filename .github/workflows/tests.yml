name: Tests
on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
        php-versions: ['7.4', '8.0']
        coverage: ["true"]
        composer-flags: [""]
        static-tests: ["true"]
        include:
          - php-versions: "7.2"
            static-tests: "false"

          - php-versions: "7.3"
            static-tests: "false"

          - php-versions: "8.0"
            composer-flags: "--ignore-platform-req=php"

          - php-versions: "8.1"
            coverage: "false"
            composer-flags: "--ignore-platform-req=php"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, curl
          coverage: xdebug
          tools: composer:v2

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --optimize-autoloader ${{ matrix.composer-flags }}

      - name: Check Coding Standard
        run: vendor/bin/phpcs

      - name: Test with Phpunit
        run: |
          if [ "${{ !matrix.coverage }}" == "false" ]; then
            vendor/bin/phpunit --no-coverage
          else
            vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover
            bash <(curl -s https://codecov.io/bash) -f coverage.clover
          fi

      - name: Test with Phpstan
        run: |
          if [ "${{ matrix.static-tests }}" == "true" ]; then
            vendor/bin/phpstan analyse
          fi

      - name: Test with Psalm
        run: |
          if [ "${{ matrix.static-tests }}" == "true" ]; then
            vendor/bin/psalm --output-format=github
          fi
